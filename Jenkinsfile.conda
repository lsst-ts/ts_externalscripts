pipeline {
    agent any
    environment {
        package_name = "externalscripts"
        package_version = sh(returnStdout: true, script: "git describe --tags --always --dirty").trim()
        dockerImageName = "lsstts/conda_package_builder:latest"
        container_name = "salobj_${BUILD_ID}_${JENKINS_NODE_COOKIE}"
    }

    stages {
        stage("Pull Docker Image") {
            steps {
                script {
                sh """
                docker pull ${dockerImageName}
                """
                }
            }
        }
        stage("Start builder"){
            steps {
                script {
                    sh """
                    docker run --name ${container_name} -di --rm \
                        --env TS_CONFIG_OCS_DIR=/home/saluser/ts_config_ocs \
                        --env TS_CONFIG_ATTCS_DIR=/home/saluser/ts_config_attcs \
                        --env LSST_DDS_DOMAIN=citest \
                        -v ${WORKSPACE}:/home/saluser/source ${dockerImageName}
                    """
                }
            }
        }
        stage("Clone ts_config_ocs"){
            steps {
                script {
                    sh """
                    docker exec ${container_name} sh -c "git clone https://github.com/lsst-ts/ts_config_ocs.git"
                    """
                }
            }
        }
        stage("Clone ts_config_attcs"){
            steps {
                script {
                    sh """
                    docker exec ${container_name} sh -c "git clone https://github.com/lsst-ts/ts_config_attcs.git"
                    """
                }
            }
        }
        stage("Create Conda package") {
            steps {
                script {
                    sh """
                    docker exec ${container_name} sh -c 'cd ~/source/conda && source ~/miniconda3/bin/activate && source "\$OSPL_HOME/release.com" && conda build --prefix-length 100 .'
                    """
                }
            }
        }
        stage("Push Conda package") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'CondaForge', passwordVariable: 'anaconda_pass', usernameVariable: 'anaconda_user')]) {
                    script {
                        sh """
                        docker exec ${container_name} sh -c "source ~/miniconda3/bin/activate && \
                            anaconda login --user ${anaconda_user} --password ${anaconda_pass} && \
                            anaconda upload -u lsstts --force \
                            ~/miniconda3/conda-bld/linux-64/ts-${package_name}*.tar.bz2"
                        """
                    }
                }
            }
        }
    }
    post {
        cleanup {
            sh """
            docker stop ${container_name}
            """
        }
    }
}
